version: "3.8"

services:
  db:
    image: postgres
    # persist data beyond lifetime of container
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=Home
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  redis:
    image: redis
    # persistent storage
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
  web:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile.dev
    # command: python manage.py runserver 0.0.0.0:8000
    command: gunicorn Home.wsgi:application --workers=10 --bind 0.0.0.0:8000 --timeout 86400
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
  nginx:
    build: ./nginx
    volumes:
      - .:/code
    ports:
      - "80:80"
    depends_on:
      - web
  celery:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: celery -A Home worker -l INFO --time-limit=86400 --soft-time-limit=86400
    volumes:
      - .:/code
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
  celery-long:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: celery -A Home worker -Q INFO --without-gossip --without-mingle --without-heartbeat --loglevel=INFO --max-memory-per-child=512000 --concurrency=1
    volumes:
      - .:/code
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
volumes:
  postgres_data:
  redis_data:
