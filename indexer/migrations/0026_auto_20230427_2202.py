# Generated by Django 3.2.13 on 2023-04-27 22:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('indexer', '0025_alter_indexapi_updated_at'),
    ]

    operations = [
        migrations.CreateModel(
            name='IndexerApiType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_method', models.CharField(blank=True, max_length=255, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'index_api_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IndexerApiUsageTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.IntegerField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'indexer_api_usage_tracking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RankTracker',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('keyword', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255)),
                ('is_found', models.IntegerField()),
                ('rank_position', models.IntegerField()),
                ('location', models.CharField(max_length=255)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('time_executed', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rank_tracker',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RankTrackerHistoryCost',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date_updated', models.DateTimeField(blank=True, null=True)),
                ('latest_rank_positions', models.IntegerField()),
            ],
            options={
                'db_table': 'rank_tracker_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SitemapModUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_mod', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'indexer_sitemap_mod_update',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SitemapPages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pages', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('time_executed', models.CharField(blank=True, max_length=255, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('indexStatusResult', models.CharField(blank=True, max_length=255, null=True)),
                ('conanical_url', models.TextField(blank=True, null=True)),
                ('lastcrawltime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'indexer_sitemap_pages',
                'managed': False,
            },
        ),
        migrations.AddField(
            model_name='indexapi',
            name='is_validated',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='sitemap',
            name='apikey',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='indexer.indexapi'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='sitemap',
            name='clicks',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='sitemap',
            name='ctr',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='sitemap',
            name='impressions',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='sitemap',
            name='is_for_human_check',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='sitemap',
            name='positions',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='sitemap',
            name='sitemap_status',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='website',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='users.customuser'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='indexapi',
            name='method',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='indexer.indexerapitype'),
            preserve_default=False,
        ),
    ]
